rf[list_, n_] := 
 With[{aa = 
    If[MemberQ[list[[1]], n] == False, list[[1]], 
     If[{n} == Select[list[[1]], MemberQ[Divisors[n], #] &], 
      list[[1]], Complement[list[[1]], Divisors[n]]]]}, {aa, 
   If[MemberQ[list[[1]], n] == False, {0}, 
    If[{n} == 
      Select[list[[1]], MemberQ[Divisors[n], #] &], {0}, {n}]], 
   If[MemberQ[list[[1]], n] == False, {0}, 
    Complement[Select[list[[1]], MemberQ[Divisors[n], #] &], {n}]]}]

rf2[list_, n_] := 
 With[{aa = 
    If[MemberQ[list, n] == False, list, 
     If[{n} == Select[list, MemberQ[Divisors[n], #] &], list, 
      Complement[list, Divisors[n]]]]}, aa]

rf3[list_, n_] := 
 With[{aa = rf2[list, n]}, {{n}, DeleteCases[Complement[list, aa], n],
    aa}]

rf4[list_, n_] := 
 Rest@FoldList[rf3[#1[[3]], #2] &, {{}, {}, Range@n}, list]

check[list_] := 
 With[{aa = 
    Length@# & /@ 
     Table[Select[list, MemberQ[Divisors[list][[t]], #] &], {t, 
       Length@list}]}, 
  Select[Transpose@{list, aa}, #[[2]] > 1 &][[All, 1]]]

graphCheck[nn_] := 
 NestWhileList[check, rf3[Range@nn, #][[3]], Min@# < nn/2 &] & /@ 
  Range@nn

graphcheck[nn_] := 
 Join[#[[1]], #[[2]]] & /@ 
  Transpose@{{{#}} & /@ Range@nn, graphCheck@nn}

s1a[list_] := 
 With[{bb = 
    With[{aa = rf[{list, {}, {}}, #]}, 
       Total@aa[[2]] - Total@aa[[3]]] & /@ list}, 
  list[[Position[bb, Max@bb][[1, 1]]]]]

s1[list_] := 
 With[{bb = 
    With[{aa = rf[{list, {}, {}}, #]}, 
       Total@aa[[2]] - Total@aa[[3]]] & /@ list}, 
  rf2[list, list[[Position[bb, Max@bb][[1, 1]]]]]]

s4[f_, nn_, choice_] := 
 With[{list = Range@nn}, 
  With[{aa = NestWhileList[f, rf2[list, choice], Min@# < nn/2 &]}, 
   With[{bb = 
      Reverse@Complement[#[[1]], #[[2]]] & /@ 
       Transpose@{Most@aa, Rest@aa}}, 
    With[{cc = {{{choice}, Complement[Divisors[choice], {choice}]}}~
        Join~Transpose@{Split@
           bb[[All, 1]], (Complement[#[[2]], #[[1]]] & /@ 
            Transpose@{Split@bb[[All, 1]], bb})}}, 
     If[cc[[1]] == cc[[2]], Rest@cc, cc]]]]]

c1[n_] := c4[s1, n, Max@Select[Range@n, PrimeQ]]

c4[f_, nn_, choice_] := 
 With[{aa = s4[f, nn, choice]}, 
  With[{bb = 
     Riffle[aa[[All, 1]][[1 ;; -1 ;; 2]], 
      aa[[All, 2]][[2 ;; -1 ;; 2]]]}, 
   With[{cc = 
      Riffle[aa[[All, 2]][[1 ;; -1 ;; 2]], 
       aa[[All, 1]][[2 ;; -1 ;; 2]]]}, 
    Grid[{(Style[#, Blue] & /@ bb)~
       Join~{Style[Total@Flatten@bb, Blue, Bold]}, (Style[#, Red] & /@
          cc)~Join~{Style[Total@Flatten@cc, Red, Bold]}}, 
     ItemSize -> Full]]]]

c4[nn_, choice_] := c4[s1, nn, choice]

c4R[f_, nn_, choice_] := 
 With[{aa = s4[f, nn, choice]}, 
  With[{bb = 
     Riffle[aa[[All, 1]][[1 ;; -1 ;; 2]], 
      aa[[All, 2]][[2 ;; -1 ;; 2]]]}, 
   With[{cc = 
      Riffle[aa[[All, 2]][[1 ;; -1 ;; 2]], 
       aa[[All, 1]][[2 ;; -1 ;; 2]]]}, 
    Total@Flatten@bb - Total@Flatten@cc]]]

c4R[nn_, choice_] := c4R[s1, nn, choice]

strat[n_] := 
 With[{aa = c4R[n, Max@Select[Range@n, PrimeQ]], 
   bb = c4[n, Max@Select[Range@n, PrimeQ]]}, 
  If[Sign@aa == 1, bb, 
   If[aa == 0 && Sign@c4R[n, 2] == -1, bb, c4[n, 2]]]]

listFunc[list_] := 
 With[{aa = Tuples[Range@Max@(Length@# & /@ list), {Length@list}]}, 
  With[{bb = #[[1]] - #[[2]] & /@ 
      Transpose@{ConstantArray[Length@# & /@ list, Length@aa], aa}}, 
   With[{cc = 
      Flatten@Position[#, 0] &@(Sign@Total@# & /@ 
         Table[Select[bb[[t]], # < 0 &], {t, Length@bb}])}, 
    With[{dd = aa[[#]] & /@ cc}, 
     DeleteDuplicates@# & /@ 
      Table[list[[#, dd[[t, #]]]] & /@ Range@Length@list, {t, 
        Length@dd}]]]]]

c4listFuncCol[list_] := 
 With[{aa = list}, 
  With[{bb = 
     Riffle[aa[[All, 1]][[1 ;; -1 ;; 2]], 
      aa[[All, 2]][[2 ;; -1 ;; 2]]]}, 
   With[{cc = 
      Riffle[aa[[All, 2]][[1 ;; -1 ;; 2]], 
       aa[[All, 1]][[2 ;; -1 ;; 2]]]}, 
    Grid[{(Style[#, Blue] & /@ bb)~
       Join~{Style[Total@Flatten@bb, Blue, Bold]}, (Style[#, Red] & /@
          cc)~Join~{Style[Total@Flatten@cc, Red, Bold]}}, 
     ItemSize -> Full]]]]

c4listFunc[list_] := 
 With[{aa = list}, 
  With[{bb = 
     Riffle[aa[[All, 1]][[1 ;; -1 ;; 2]], 
      aa[[All, 2]][[2 ;; -1 ;; 2]]]}, 
   With[{cc = 
      Riffle[aa[[All, 2]][[1 ;; -1 ;; 2]], 
       aa[[All, 1]][[2 ;; -1 ;; 2]]]}, {(bb)~
      Join~{Total@Flatten@bb}, (cc)~Join~{Total@Flatten@cc}}]]]

graphcheck1[nn_] := 
 Join[#[[1]], #[[2]]] & /@ 
  Transpose@{{{#}} & /@ 
     Range@nn, (PadLeft[#, 
        Length@s4[s1, nn, Max@Select[Range@nn, PrimeQ]] - 
         1, {#[[1]]}] & /@ graphCheck@nn)}

allgamesGrid[nn_] := 
 Grid[SortBy[(c4listFunc@# & /@ (Select[#, 
         MemberQ[#, {}] == False &] & /@ (Take[#, 2] & /@ 
           Rest@FoldList[rf3[#[[3]], #2] &, {{}, {}, Range@nn}, #] & /@
          Flatten[listFunc@# & /@ Rest@graphcheck1@nn, 1]))), 
   Last@First@# &], Alignment -> Left]

losstowin[nn_] := 
 With[{aa = (c4listFunc@# & /@ (Select[#, 
          MemberQ[#, {}] == False &] & /@ (Take[#, 2] & /@ 
            Rest@FoldList[
              rf3[#[[3]], #2] &, {{}, {}, Range@nn}, #] & /@ 
          Flatten[listFunc@# & /@ Rest@graphcheck1@nn, 1])))}, 
  DeleteDuplicates@
   Sort@(Join[#[[1]], #[[2]]] & /@ 
      Transpose@{{#} & /@ (Last@#[[1]] - Last@#[[2]] & /@ aa), aa})]

losstowinG[nn_] := 
 With[{aa = (c4listFunc@# & /@ (Select[#, 
          MemberQ[#, {}] == False &] & /@ (Take[#, 2] & /@ 
            Rest@FoldList[
              rf3[#[[3]], #2] &, {{}, {}, Range@nn}, #] & /@ 
          Flatten[listFunc@# & /@ Rest@graphcheck1@nn, 1])))}, 
  Grid[DeleteDuplicates@
    Sort@(Join[#[[1]], #[[2]]] & /@ 
       Transpose@{{#} & /@ (Last@#[[1]] - Last@#[[2]] & /@ aa), aa}), 
   Alignment -> Right]]

losstowinCol[nn_] := 
 With[{aa = (c4listFunc@# & /@ (Select[#, 
          MemberQ[#, {}] == False &] & /@ (Take[#, 2] & /@ 
            Rest@FoldList[
              rf3[#[[3]], #2] &, {{}, {}, Range@nn}, #] & /@ 
          Flatten[listFunc@# & /@ Rest@graphcheck1@nn, 1])))}, 
  With[{bb = 
     DeleteDuplicates@
      Sort@(Join[#[[1]], #[[2]]] & /@ 
         Transpose@{{#} & /@ (Last@#[[1]] - Last@#[[2]] & /@ aa), 
           aa})}, Grid[{Style[#[[1]], Bold], Style[Most@#[[2]], Blue],
        Style[Last@#[[2]], Bold, Blue], Style[Most@#[[3]], Red], 
       Style[Last@#[[3]], Bold, Red]} & /@ bb, Alignment -> Right]]]
